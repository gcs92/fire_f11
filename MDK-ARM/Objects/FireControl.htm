<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FireControl.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FireControl.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Nov 09 23:44:02 2022
<BR><P>
<H3>Maximum Stack Usage =        304 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Debug_Display &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[d0]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">NMI_Handler</a><BR>
 <LI><a href="#[4e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">HardFault_Handler</a><BR>
 <LI><a href="#[4f]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">SVC_Handler</a><BR>
 <LI><a href="#[50]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">PendSV_Handler</a><BR>
 <LI><a href="#[51]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">SysTick_Handler</a><BR>
 <LI><a href="#[57]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[57]">ADC_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[65]">AES_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[6e]">ATIM_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[6a]">BSTIM_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[6b]">COMPx_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[67]">DMA_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[55]">FLASH_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[70]">GPIO_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[6c]">GPTIM0_IRQHandler</a> from timer.o(i.GPTIM0_IRQHandler) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[6d]">GPTIM1_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[60]">HFDET_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[4e]">HardFault_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[64]">I2CSMB_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[63]">I2C_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[58]">IWDT_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5b]">LCD_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[56]">LFDET_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[66]">LPTIM_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[71]">LPUART0_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[62]">LPUART1_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[4d]">NMI_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[50]">PendSV_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[54]">RTC_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[4c]">Reset_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[59]">SPI1_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5a]">SPI2_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[4f]">SVC_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[53]">SVD_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[51]">SysTick_Handler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[72]">SystemInit</a> from system_fm33le0xx.o(i.SystemInit) referenced from startup_fm33le0xx.o(.text)
 <LI><a href="#[61]">U7816_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5c]">UART0_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5d]">UART1_IRQHandler</a> from debug.o(i.UART1_IRQHandler) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[69]">UART2_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5e]">UART4_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5f]">UART5_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[5]">UOC_paremeter_F00_FUNC</a> from button_function.o(i.UOC_paremeter_F00_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[6]">UOC_paremeter_F01_FUNC</a> from button_function.o(i.UOC_paremeter_F01_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[7]">UOC_paremeter_F02_FUNC</a> from button_function.o(i.UOC_paremeter_F02_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[8]">UOC_paremeter_F03_FUNC</a> from button_function.o(i.UOC_paremeter_F03_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[9]">UOC_paremeter_F04_FUNC</a> from button_function.o(i.UOC_paremeter_F04_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[a]">UOC_paremeter_F05_FUNC</a> from button_function.o(i.UOC_paremeter_F05_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[b]">UOC_paremeter_F06_FUNC</a> from button_function.o(i.UOC_paremeter_F06_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[c]">UOC_paremeter_F07_FUNC</a> from button_function.o(i.UOC_paremeter_F07_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[d]">UOC_paremeter_F08_FUNC</a> from button_function.o(i.UOC_paremeter_F08_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[e]">UOC_paremeter_F09_FUNC</a> from button_function.o(i.UOC_paremeter_F09_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[f]">UOC_paremeter_F10_FUNC</a> from button_function.o(i.UOC_paremeter_F10_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[10]">UOC_paremeter_F11_FUNC</a> from button_function.o(i.UOC_paremeter_F11_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[11]">UOC_paremeter_F12_FUNC</a> from button_function.o(i.UOC_paremeter_F12_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[12]">UOC_paremeter_F13_FUNC</a> from button_function.o(i.UOC_paremeter_F13_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[13]">UOC_paremeter_F14_FUNC</a> from button_function.o(i.UOC_paremeter_F14_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[14]">UOC_paremeter_F15_FUNC</a> from button_function.o(i.UOC_paremeter_F15_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[15]">UOC_paremeter_F16_FUNC</a> from button_function.o(i.UOC_paremeter_F16_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[16]">UOC_paremeter_F17_FUNC</a> from button_function.o(i.UOC_paremeter_F17_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[17]">UOC_paremeter_F18_FUNC</a> from button_function.o(i.UOC_paremeter_F18_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[18]">UOC_paremeter_F19_FUNC</a> from button_function.o(i.UOC_paremeter_F19_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[19]">UOC_paremeter_F20_FUNC</a> from button_function.o(i.UOC_paremeter_F20_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1a]">UOC_paremeter_F21_FUNC</a> from button_function.o(i.UOC_paremeter_F21_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1b]">UOC_paremeter_F22_FUNC</a> from button_function.o(i.UOC_paremeter_F22_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1c]">UOC_paremeter_F23_FUNC</a> from button_function.o(i.UOC_paremeter_F23_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1d]">UOC_paremeter_F24_FUNC</a> from button_function.o(i.UOC_paremeter_F24_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1e]">UOC_paremeter_F25_FUNC</a> from button_function.o(i.UOC_paremeter_F25_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[1f]">UOC_paremeter_F26_FUNC</a> from button_function.o(i.UOC_paremeter_F26_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[20]">UOC_paremeter_F27_FUNC</a> from button_function.o(i.UOC_paremeter_F27_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[21]">UOC_paremeter_F28_FUNC</a> from button_function.o(i.UOC_paremeter_F28_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[22]">UOC_paremeter_F29_FUNC</a> from button_function.o(i.UOC_paremeter_F29_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[23]">UOC_paremeter_F30_FUNC</a> from button_function.o(i.UOC_paremeter_F30_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[24]">UOC_paremeter_F31_FUNC</a> from button_function.o(i.UOC_paremeter_F31_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[25]">UOC_paremeter_F32_FUNC</a> from button_function.o(i.UOC_paremeter_F32_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[26]">UOC_paremeter_F33_FUNC</a> from button_function.o(i.UOC_paremeter_F33_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[27]">UOC_paremeter_F34_FUNC</a> from button_function.o(i.UOC_paremeter_F34_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[28]">UOC_paremeter_F35_FUNC</a> from button_function.o(i.UOC_paremeter_F35_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[29]">UOC_paremeter_F36_FUNC</a> from button_function.o(i.UOC_paremeter_F36_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2a]">UOC_paremeter_F37_FUNC</a> from button_function.o(i.UOC_paremeter_F37_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2b]">UOC_paremeter_F38_FUNC</a> from button_function.o(i.UOC_paremeter_F38_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2c]">UOC_paremeter_F39_FUNC</a> from button_function.o(i.UOC_paremeter_F39_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2d]">UOC_paremeter_F40_FUNC</a> from button_function.o(i.UOC_paremeter_F40_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2e]">UOC_paremeter_F41_FUNC</a> from button_function.o(i.UOC_paremeter_F41_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[2f]">UOC_paremeter_F42_FUNC</a> from button_function.o(i.UOC_paremeter_F42_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[30]">UOC_paremeter_F43_FUNC</a> from button_function.o(i.UOC_paremeter_F43_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[31]">UOC_paremeter_F44_FUNC</a> from button_function.o(i.UOC_paremeter_F44_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[32]">UOC_paremeter_F45_FUNC</a> from button_function.o(i.UOC_paremeter_F45_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[33]">UOC_paremeter_F46_FUNC</a> from button_function.o(i.UOC_paremeter_F46_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[34]">UOC_paremeter_F47_FUNC</a> from button_function.o(i.UOC_paremeter_F47_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[35]">UOC_paremeter_F48_FUNC</a> from button_function.o(i.UOC_paremeter_F48_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[36]">UOC_paremeter_F49_FUNC</a> from button_function.o(i.UOC_paremeter_F49_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[37]">UOC_paremeter_F50_FUNC</a> from button_function.o(i.UOC_paremeter_F50_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[38]">UOC_paremeter_F51_FUNC</a> from button_function.o(i.UOC_paremeter_F51_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[39]">UOC_paremeter_F52_FUNC</a> from button_function.o(i.UOC_paremeter_F52_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3a]">UOC_paremeter_F53_FUNC</a> from button_function.o(i.UOC_paremeter_F53_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3b]">UOC_paremeter_F54_FUNC</a> from button_function.o(i.UOC_paremeter_F54_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3c]">UOC_paremeter_F55_FUNC</a> from button_function.o(i.UOC_paremeter_F55_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3d]">UOC_paremeter_F56_FUNC</a> from button_function.o(i.UOC_paremeter_F56_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3e]">UOC_paremeter_F57_FUNC</a> from button_function.o(i.UOC_paremeter_F57_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[3f]">UOC_paremeter_F58_FUNC</a> from button_function.o(i.UOC_paremeter_F58_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[40]">UOC_paremeter_F59_FUNC</a> from button_function.o(i.UOC_paremeter_F59_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[41]">UOC_paremeter_F60_FUNC</a> from button_function.o(i.UOC_paremeter_F60_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[42]">UOC_paremeter_F61_FUNC</a> from button_function.o(i.UOC_paremeter_F61_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[43]">UOC_paremeter_F62_FUNC</a> from button_function.o(i.UOC_paremeter_F62_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[44]">UOC_paremeter_F63_FUNC</a> from button_function.o(i.UOC_paremeter_F63_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[45]">UOC_paremeter_F64_FUNC</a> from button_function.o(i.UOC_paremeter_F64_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[46]">UOC_paremeter_F65_FUNC</a> from button_function.o(i.UOC_paremeter_F65_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[47]">UOC_paremeter_F66_FUNC</a> from button_function.o(i.UOC_paremeter_F66_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[48]">UOC_paremeter_F67_FUNC</a> from button_function.o(i.UOC_paremeter_F67_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[49]">UOC_paremeter_F68_FUNC</a> from button_function.o(i.UOC_paremeter_F68_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[4a]">UOC_paremeter_F69_FUNC</a> from button_function.o(i.UOC_paremeter_F69_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[4b]">UOC_paremeter_FREE_FUNC</a> from button_function.o(i.UOC_paremeter_FREE_FUNC) referenced 2 times from button_function.o(.data)
 <LI><a href="#[6f]">VREF_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[68]">WKUP_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[52]">WWDT_IRQHandler</a> from startup_fm33le0xx.o(.text) referenced from startup_fm33le0xx.o(RESET)
 <LI><a href="#[77]">__main</a> from __main.o(!!!main) referenced from startup_fm33le0xx.o(.text)
 <LI><a href="#[76]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[75]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[74]">_snputc</a> from _snputc.o(.text) referenced from _vsnprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[78]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[136]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[137]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[138]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[c9]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[7b]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_n &rArr; _printf_p &rArr; _printf_f &rArr; _printf_e &rArr; _printf_g &rArr; _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[7c]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_f &rArr; _printf_e &rArr; _printf_g &rArr; _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[7e]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_e &rArr; _printf_g &rArr; _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[80]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_g &rArr; _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[82]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
</UL>

<P><STRONG><a name="[83]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
</UL>

<P><STRONG><a name="[84]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_ll &rArr; _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[86]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll
</UL>

<P><STRONG><a name="[87]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[89]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[8a]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
</UL>

<P><STRONG><a name="[8b]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[8d]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_lld &rArr; _printf_llu &rArr; _printf_llo &rArr; _printf_llx &rArr; _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[8f]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_llu &rArr; _printf_llo &rArr; _printf_llx &rArr; _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[91]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_llo &rArr; _printf_llx &rArr; _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
</UL>

<P><STRONG><a name="[92]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_llx &rArr; _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
</UL>

<P><STRONG><a name="[93]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_l
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[95]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_l &rArr; _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[97]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_l
</UL>

<P><STRONG><a name="[98]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[9a]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[9c]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[9e]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[a6]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[139]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[13a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[13b]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[13c]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[13f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[140]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[141]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[142]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[143]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[144]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[145]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[146]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[147]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[148]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[149]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[14e]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[14f]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[150]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[151]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[152]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[153]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[79]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[154]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a3]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[155]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a7]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Debug_Display &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[156]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[d2]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[aa]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[157]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ac]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>ATIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>BSTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>COMPx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>GPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>HFDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2CSMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>IWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>LFDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>U7816_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>VREF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33le0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_fm33le0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ae]"></a>_vsnprintf</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, _vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>

<P><STRONG><a name="[158]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_F02_FUNC
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_F01_FUNC
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_func
</UL>

<P><STRONG><a name="[159]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxFlag
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_FN_Menu
</UL>

<P><STRONG><a name="[15a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[b1]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[f4]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[b7]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[b6]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[15f]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[160]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[161]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[bd]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[be]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[bf]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[bb]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[88]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[7d]"></a>_printf_charcount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[af]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[b0]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[74]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[90]"></a>_printf_longlong_dec</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[c6]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[8c]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[94]"></a>_printf_ll_oct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[c7]"></a>_printf_longlong_hex</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[8e]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[96]"></a>_printf_ll_hex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[7f]"></a>_printf_hex_ptr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[c2]"></a>__printf</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[c5]"></a>_ll_udiv10</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[c1]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ca]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[99]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[9b]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[cc]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[9d]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[9f]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[c4]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[c0]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[a4]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[ce]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[a9]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[162]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[163]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[ad]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[135]"></a>strcmp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[164]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>Control_High_Speed_Fan</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_control.o(i.Control_High_Speed_Fan))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Control_High_Speed_Fan &rArr; Control_R03R04R05_Function &rArr; Output_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Control
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_R03R04R05_Function
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
</UL>

<P><STRONG><a name="[d6]"></a>Control_Ordinary_Fan</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_control.o(i.Control_Ordinary_Fan))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Control_Ordinary_Fan &rArr; Control_R03R04R05_Function &rArr; Output_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Control
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_R03R04R05_Function
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
</UL>

<P><STRONG><a name="[d5]"></a>Control_R03R04R05_Function</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, system_control.o(i.Control_R03R04R05_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Control_R03R04R05_Function &rArr; Output_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Ordinary_Fan
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_High_Speed_Fan
</UL>

<P><STRONG><a name="[d7]"></a>Debug_Display</STRONG> (Thumb, 1966 bytes, Stack size 152 bytes, debug.o(i.Debug_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = Debug_Display &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_data
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCpy
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>Debug_dispaly_init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i.Debug_dispaly_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Debug_dispaly_init &rArr; dbg_array_buffer &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_array_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_sys_data_init
</UL>

<P><STRONG><a name="[dc]"></a>Delay1Ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.Delay1Ms))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_release
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_press
</UL>

<P><STRONG><a name="[e0]"></a>Display_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, main.o(i.Display_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Display_init &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_display
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_sys_data_init
</UL>

<P><STRONG><a name="[f8]"></a>FL_DelayInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33le0xx_fl.o(i.FL_DelayInit))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_Init
</UL>

<P><STRONG><a name="[e3]"></a>FL_GPIO_Init</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_SetPinMode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinRemap
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinPullup
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinOpenDrain
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinInput
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinAnalogSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART1_Init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Spi_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Led_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_Init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Control_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Button_Init
</UL>

<P><STRONG><a name="[ea]"></a>FL_GPTIM_Init</STRONG> (Thumb, 342 bytes, Stack size 16 bytes, fm33le0xx_fl_gptim.o(i.FL_GPTIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FL_GPTIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup4BusClock
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPTIM_SetCounterAlignedMode
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_GPTIM0_TimerBase_Init
</UL>

<P><STRONG><a name="[ed]"></a>FL_I2C_MasterMode_Init</STRONG> (Thumb, 340 bytes, Stack size 48 bytes, fm33le0xx_fl_i2c.o(i.FL_I2C_MasterMode_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup3BusClock
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_Init
</UL>

<P><STRONG><a name="[f7]"></a>FL_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, fm33le0xx_fl.o(i.FL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FL_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_DelayInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f9]"></a>FL_NVIC_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fm33le0xx_fl.o(i.FL_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FL_NVIC_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_NVIC_Init
</UL>

<P><STRONG><a name="[fb]"></a>FL_RCC_GetAHBClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetAHBClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB2ClockFreq
</UL>

<P><STRONG><a name="[ef]"></a>FL_RCC_GetAPB1ClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetAPB1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[fc]"></a>FL_RCC_GetAPB2ClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetAPB2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FL_RCC_GetAPB2ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[fd]"></a>FL_RCC_GetPLLClockFreq</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[f0]"></a>FL_RCC_GetRCHFClockFreq</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetRCHFClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[f2]"></a>FL_RCC_GetRCMFClockFreq</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetRCMFClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[f1]"></a>FL_RCC_GetSystemClockFreq</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, fm33le0xx_fl_rcc.o(i.FL_RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>

<P><STRONG><a name="[ff]"></a>FL_SPI_Init</STRONG> (Thumb, 464 bytes, Stack size 16 bytes, fm33le0xx_fl_spi.o(i.FL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup3BusClock
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Spi_Init
</UL>

<P><STRONG><a name="[101]"></a>FL_UART_Init</STRONG> (Thumb, 798 bytes, Stack size 24 bytes, fm33le0xx_fl_uart.o(i.FL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FL_UART_Init &rArr; FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup3BusClock
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup1OperationClock
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB2ClockFreq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART1_Init
</UL>

<P><STRONG><a name="[6c]"></a>GPTIM0_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, timer.o(i.GPTIM0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>GPTIM_Start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.GPTIM_Start))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[e2]"></a>I2C_Display</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, i2c.o(i.I2C_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_Display
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_Offset_Display
</UL>

<P><STRONG><a name="[105]"></a>I2C_Send_Bit</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, i2c.o(i.I2C_Send_Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_Master_IsActiveFlag_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_end
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sendaddr_Display
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_Display
</UL>

<P><STRONG><a name="[108]"></a>I2C_Send_Byte</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, i2c.o(i.I2C_Send_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_end
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sendaddr_Display
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_Display
</UL>

<P><STRONG><a name="[104]"></a>I2C_Write_Display</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, i2c.o(i.I2C_Write_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_for_end
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sendaddr_Display
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Byte
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Display
</UL>

<P><STRONG><a name="[10a]"></a>Input_Detection</STRONG> (Thumb, 798 bytes, Stack size 8 bytes, system_control.o(i.Input_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Input_Detection &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_GetInputPin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output_Control
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_R03R04R05_Function
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Ordinary_Fan
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_High_Speed_Fan
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>Key_Funtion</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, button_function.o(i.Key_Funtion))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Key_Funtion &rArr; UOC_Parameter_State &rArr; UOC_Parameter_func &rArr; UOC_paremeter_Display &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_release
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_press
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>Key_press</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, button_function.o(i.Key_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Key_press &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_GetInputPin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Funtion
</UL>

<P><STRONG><a name="[10e]"></a>Key_release</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, button_function.o(i.Key_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Key_release &rArr; SPI_Check_init &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_GetInputPin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Funtion
</UL>

<P><STRONG><a name="[112]"></a>MF_Button_Init</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, mf_config.o(i.MF_Button_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MF_Button_Init &rArr; FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[133]"></a>MF_Clock_Init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mf_config.o(i.MF_Clock_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>MF_Config_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mf_config.o(i.MF_Config_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MF_Config_Init &rArr; MF_I2C_Init &rArr; FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTIM_Start
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Spi_Init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_NVIC_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Led_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_GPTIM0_TimerBase_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Debug_Init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Control_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Button_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[118]"></a>MF_Control_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, mf_config.o(i.MF_Control_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MF_Control_Init &rArr; FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[116]"></a>MF_Debug_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mf_config.o(i.MF_Debug_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MF_Debug_Init &rArr; MF_UART1_Init &rArr; FL_UART_Init &rArr; FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[119]"></a>MF_GPTIM0_TimerBase_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, mf_config.o(i.MF_GPTIM0_TimerBase_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MF_GPTIM0_TimerBase_Init &rArr; FL_GPTIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPTIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[117]"></a>MF_I2C_Init</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, mf_config.o(i.MF_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MF_I2C_Init &rArr; FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[115]"></a>MF_Led_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, mf_config.o(i.MF_Led_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MF_Led_Init &rArr; FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[11a]"></a>MF_NVIC_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mf_config.o(i.MF_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MF_NVIC_Init &rArr; FL_NVIC_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[114]"></a>MF_Spi_Init</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, mf_config.o(i.MF_Spi_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MF_Spi_Init &rArr; FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[134]"></a>MF_SystemClock_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mf_config.o(i.MF_SystemClock_Config))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>MF_UART1_Init</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, mf_config.o(i.MF_UART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MF_UART1_Init &rArr; FL_UART_Init &rArr; FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Debug_Init
</UL>

<P><STRONG><a name="[d9]"></a>MemCmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, debug.o(i.MemCmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MemCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
</UL>

<P><STRONG><a name="[d8]"></a>MemCpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, debug.o(i.MemCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxGet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
</UL>

<P><STRONG><a name="[dd]"></a>MemSet</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, debug.o(i.MemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
</UL>

<P><STRONG><a name="[d4]"></a>Output_Control</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, system_control.o(i.Output_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Output_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_R03R04R05_Function
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Ordinary_Fan
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_High_Speed_Fan
</UL>

<P><STRONG><a name="[111]"></a>SPI_Check_init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, spi.o(i.SPI_Check_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = SPI_Check_init &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_data_init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_release
</UL>

<P><STRONG><a name="[11d]"></a>SPI_ReadWrite</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, spi.o(i.SPI_ReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_WriteTXBuff
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_SetSSNPin
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_ReadRXBuff
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_IsActiveFlag_RXBuffFull
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_data
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
</UL>

<P><STRONG><a name="[11e]"></a>SPI_Read_Cmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi.o(i.SPI_Read_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Read_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_WriteTXBuff
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_SetSSNPin
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_ReadRXBuff
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_IsActiveFlag_RXBuffFull
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_data
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
</UL>

<P><STRONG><a name="[db]"></a>SPI_Read_data</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, spi.o(i.SPI_Read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Read_data &rArr; SPI_Read_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
</UL>

<P><STRONG><a name="[123]"></a>SendBuf</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, debug.o(i.SendBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>

<P><STRONG><a name="[124]"></a>SendOneByte</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, debug.o(i.SendOneByte))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBuf
</UL>

<P><STRONG><a name="[107]"></a>Sendaddr_Display</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, i2c.o(i.Sendaddr_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Sendaddr_Display &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Byte
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_Display
</UL>

<P><STRONG><a name="[125]"></a>Spi_data_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.Spi_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Spi_data_init &rArr; SPI_Check_init &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_sys_data_init
</UL>

<P><STRONG><a name="[126]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, system_fm33le0xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate &rArr; SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[72]"></a>SystemInit</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, system_fm33le0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>UART1_IRQHandler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, debug.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_ReadRXBuff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33le0xx.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>UART_RxFlag</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, debug.o(i.UART_RxFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_RxFlag &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12b]"></a>UART_RxGet</STRONG> (Thumb, 342 bytes, Stack size 36 bytes, debug.o(i.UART_RxGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART_RxGet &rArr; MemCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12c]"></a>UOC_FN_Exit_Menu</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, button_function.o(i.UOC_FN_Exit_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UOC_FN_Exit_Menu &rArr; led_display
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_display
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
</UL>

<P><STRONG><a name="[12d]"></a>UOC_FN_Menu</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, button_function.o(i.UOC_FN_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UOC_FN_Menu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
</UL>

<P><STRONG><a name="[12e]"></a>UOC_Parameter_Offset_Display</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, button_function.o(i.UOC_Parameter_Offset_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UOC_Parameter_Offset_Display &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_func
</UL>

<P><STRONG><a name="[10f]"></a>UOC_Parameter_State</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, button_function.o(i.UOC_Parameter_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UOC_Parameter_State &rArr; UOC_Parameter_func &rArr; UOC_paremeter_Display &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_Display
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_func
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_FN_Menu
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_FN_Exit_Menu
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Funtion
</UL>

<P><STRONG><a name="[130]"></a>UOC_Parameter_func</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, button_function.o(i.UOC_Parameter_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = UOC_Parameter_func &rArr; UOC_paremeter_Display &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_display
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_Display
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_Offset_Display
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
</UL>

<P><STRONG><a name="[12f]"></a>UOC_paremeter_Display</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, button_function.o(i.UOC_paremeter_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UOC_paremeter_Display &rArr; I2C_Display &rArr; I2C_Write_Display &rArr; Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_func
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_State
</UL>

<P><STRONG><a name="[5]"></a>UOC_paremeter_F00_FUNC</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F00_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>UOC_paremeter_F01_FUNC</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, button_function.o(i.UOC_paremeter_F01_FUNC))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = UOC_paremeter_F01_FUNC &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>UOC_paremeter_F02_FUNC</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, button_function.o(i.UOC_paremeter_F02_FUNC))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = UOC_paremeter_F02_FUNC &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>UOC_paremeter_F03_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F03_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>UOC_paremeter_F04_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F04_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>UOC_paremeter_F05_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F05_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>UOC_paremeter_F06_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F06_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>UOC_paremeter_F07_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F07_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>UOC_paremeter_F08_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F08_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>UOC_paremeter_F09_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F09_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>UOC_paremeter_F10_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F10_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>UOC_paremeter_F11_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F11_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>UOC_paremeter_F12_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F12_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>UOC_paremeter_F13_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F13_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>UOC_paremeter_F14_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F14_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>UOC_paremeter_F15_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F15_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>UOC_paremeter_F16_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F16_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>UOC_paremeter_F17_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F17_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>UOC_paremeter_F18_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F18_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>UOC_paremeter_F19_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F19_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>UOC_paremeter_F20_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F20_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>UOC_paremeter_F21_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F21_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>UOC_paremeter_F22_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F22_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>UOC_paremeter_F23_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F23_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>UOC_paremeter_F24_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F24_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>UOC_paremeter_F25_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F25_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>UOC_paremeter_F26_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F26_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>UOC_paremeter_F27_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F27_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>UOC_paremeter_F28_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F28_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>UOC_paremeter_F29_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F29_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>UOC_paremeter_F30_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F30_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>UOC_paremeter_F31_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F31_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>UOC_paremeter_F32_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F32_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>UOC_paremeter_F33_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F33_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>UOC_paremeter_F34_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F34_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>UOC_paremeter_F35_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F35_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>UOC_paremeter_F36_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F36_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>UOC_paremeter_F37_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F37_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>UOC_paremeter_F38_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F38_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>UOC_paremeter_F39_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F39_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>UOC_paremeter_F40_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F40_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>UOC_paremeter_F41_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F41_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>UOC_paremeter_F42_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F42_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>UOC_paremeter_F43_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F43_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>UOC_paremeter_F44_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F44_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>UOC_paremeter_F45_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F45_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>UOC_paremeter_F46_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F46_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>UOC_paremeter_F47_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F47_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>UOC_paremeter_F48_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F48_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>UOC_paremeter_F49_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F49_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>UOC_paremeter_F50_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F50_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>UOC_paremeter_F51_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F51_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>UOC_paremeter_F52_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F52_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>UOC_paremeter_F53_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F53_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>UOC_paremeter_F54_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F54_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>UOC_paremeter_F55_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F55_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>UOC_paremeter_F56_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F56_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>UOC_paremeter_F57_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F57_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>UOC_paremeter_F58_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F58_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>UOC_paremeter_F59_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F59_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>UOC_paremeter_F60_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F60_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>UOC_paremeter_F61_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F61_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>UOC_paremeter_F62_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F62_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>UOC_paremeter_F63_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F63_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>UOC_paremeter_F64_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F64_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>UOC_paremeter_F65_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F65_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>UOC_paremeter_F66_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F66_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>UOC_paremeter_F67_FUNC</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, button_function.o(i.UOC_paremeter_F67_FUNC))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = UOC_paremeter_F67_FUNC &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>UOC_paremeter_F68_FUNC</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F68_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>UOC_paremeter_F69_FUNC</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_F69_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>UOC_paremeter_FREE_FUNC</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, button_function.o(i.UOC_paremeter_FREE_FUNC))
<BR>[Address Reference Count : 1]<UL><LI> button_function.o(.data)
</UL>
<P><STRONG><a name="[131]"></a>UOC_spi_read_data_cycle</STRONG> (Thumb, 2036 bytes, Stack size 16 bytes, main.o(i.UOC_spi_read_data_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = UOC_spi_read_data_cycle &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_display
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_data
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Display
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[132]"></a>UOC_sys_data_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.UOC_sys_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = UOC_sys_data_init &rArr; Debug_dispaly_init &rArr; dbg_array_buffer &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_data_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_dispaly_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>Wait_for_end</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, i2c.o(i.Wait_for_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Wait_for_end &rArr; I2C_Send_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Byte
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write_Display
</UL>

<P><STRONG><a name="[fe]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_fm33le0xx.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[c8]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[df]"></a>dbg_array_buffer</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, debug.o(i.dbg_array_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = dbg_array_buffer &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_dispaly_init
</UL>

<P><STRONG><a name="[da]"></a>dbg_printf</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, debug.o(i.dbg_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBuf
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_array_buffer
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Check_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_data_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_dispaly_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_F67_FUNC
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_F02_FUNC
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_paremeter_F01_FUNC
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_release
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_press
</UL>

<P><STRONG><a name="[e1]"></a>led_display</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, led.o(i.led_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = led_display
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_Parameter_func
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_FN_Exit_Menu
</UL>

<P><STRONG><a name="[a8]"></a>main</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = main &rArr; Debug_Display &rArr; dbg_printf &rArr; _vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_printf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxGet
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxFlag
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Funtion
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Display
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_sys_data_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UOC_spi_read_data_cycle
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_SystemClock_Config
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Clock_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[76]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[121]"></a>FL_SPI_IsActiveFlag_RXBuffFull</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spi.o(i.FL_SPI_IsActiveFlag_RXBuffFull))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
</UL>

<P><STRONG><a name="[122]"></a>FL_SPI_ReadRXBuff</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(i.FL_SPI_ReadRXBuff))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
</UL>

<P><STRONG><a name="[11f]"></a>FL_SPI_SetSSNPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi.o(i.FL_SPI_SetSSNPin))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
</UL>

<P><STRONG><a name="[120]"></a>FL_SPI_WriteTXBuff</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(i.FL_SPI_WriteTXBuff))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Cmd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWrite
</UL>

<P><STRONG><a name="[127]"></a>SystemPLLClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, system_fm33le0xx.o(i.SystemPLLClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[fa]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, fm33le0xx_fl.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_NVIC_Init
</UL>

<P><STRONG><a name="[e7]"></a>FL_GPIO_DisablePinAnalogSwitch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_DisablePinAnalogSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[e4]"></a>FL_GPIO_DisablePinInput</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_DisablePinInput))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[e6]"></a>FL_GPIO_DisablePinOpenDrain</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_DisablePinOpenDrain))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[e5]"></a>FL_GPIO_DisablePinPullup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_DisablePinPullup))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[e8]"></a>FL_GPIO_DisablePinRemap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_DisablePinRemap))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[e9]"></a>FL_GPIO_SetPinMode</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, fm33le0xx_fl_gpio.o(i.FL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[ec]"></a>FL_GPTIM_SetCounterAlignedMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_gptim.o(i.FL_GPTIM_SetCounterAlignedMode))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPTIM_Init
</UL>

<P><STRONG><a name="[eb]"></a>FL_RCC_EnableGroup4BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_gptim.o(i.FL_RCC_EnableGroup4BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPTIM_Init
</UL>

<P><STRONG><a name="[ee]"></a>FL_RCC_EnableGroup3BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_i2c.o(i.FL_RCC_EnableGroup3BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[100]"></a>FL_RCC_EnableGroup3BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_spi.o(i.FL_RCC_EnableGroup3BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_SPI_Init
</UL>

<P><STRONG><a name="[103]"></a>FL_RCC_EnableGroup1OperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_uart.o(i.FL_RCC_EnableGroup1OperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[102]"></a>FL_RCC_EnableGroup3BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33le0xx_fl_uart.o(i.FL_RCC_EnableGroup3BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[110]"></a>FL_GPIO_GetInputPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, button_function.o(i.FL_GPIO_GetInputPin))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_release
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_press
</UL>

<P><STRONG><a name="[128]"></a>FL_UART_ReadRXBuff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, debug.o(i.FL_UART_ReadRXBuff))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[106]"></a>FL_I2C_Master_IsActiveFlag_Start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c.o(i.FL_I2C_Master_IsActiveFlag_Start))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send_Bit
</UL>

<P><STRONG><a name="[10b]"></a>FL_GPIO_GetInputPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_control.o(i.FL_GPIO_GetInputPin))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Detection
</UL>

<P><STRONG><a name="[b3]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[b2]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[75]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[d1]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[81]"></a>_printf_fp_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[85]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[cb]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[cd]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<HR></body></html>
