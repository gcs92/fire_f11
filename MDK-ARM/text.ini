FUNC void Setup (void) {
	/*Flash工作时钟总线时钟配置*/
	
	_WDWORD(0x4000022C, 0X00060020);  //RCC_PCLKCR2 NVMIF（Flash 擦写控制器）总线时钟使能  
	_sleep_(1);																	 
	_WDWORD(0x40000270, 0x00400000);	//RCC_OPCCR2 NVMCKE Flash  擦写时钟使能 
	_sleep_(1);																	 
	
	/*Flash全擦配置*/
	_WDWORD(0x40001014, 0x00000200); 
  _sleep_(1); 
	_WDWORD(0x40001014, 0x00000201);	//FLS_EPCR Flash 擦写控制寄存器 
	_sleep_(1);																 
	_WDWORD(0x40001018, 0x96969696);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(1);																 
	_WDWORD(0x40001018, 0x7D7D7D7D);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(1);																	 	
	_WDWORD(0x1FFFFC08, 0x1234ABCD);  //LOCK1
	_sleep_(1500);																	 
	printf ("FLS_ISR KEYSTA = %05XH,bit17=1&bit0=1表示全擦解锁状态且擦写完成\n", _RDWORD(0x40001020));	
	_WDWORD(0x40001018, 0x00000000);	//FLS_KEY Flash Key 输入寄存器	
	_WDWORD(0x40001020, 0x00000001);

	/*Flash页擦配置*/
	_WDWORD(0x40001014, 0x00000000); 
  _sleep_(1); 
	_WDWORD(0x40001014, 0x00000001);	//FLS_EPCR Flash 擦写控制寄存器 
	_sleep_(1);																 
	_WDWORD(0x40001018, 0x96969696);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(1);																 
	_WDWORD(0x40001018, 0xEAEAEAEA);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(1);																	 
	_WDWORD(0x1FFFFC08, 0x1234ABCD);  //LOCK1
	_sleep_(1500);																	 
	printf ("FLS_ISR KEYSTA = %05XH,bit18=1&bit0=1表示页擦解锁状态且擦写完成\n", _RDWORD(0x40001020));		
	_WDWORD(0x40001018, 0x00000000);	//FLS_KEY Flash Key 输入寄存器
	_WDWORD(0x40001020, 0x00000001);

	_WDWORD(0x40001014, 0x00000000);  
 	  _sleep_(1);
  _WDWORD(0x40001014, 0x00000002);  
	  _sleep_(1);
	_WDWORD(0x40001018, 0xA5A5A5A5);  
	_sleep_(10);
	_WDWORD(0x40001018, 0xF1F1F1F1); 
	_sleep_(10);
	_WDWORD(0x1FFFFC00, 0Xcc5533AA); //OPTBYTES低位
		_sleep_(1500);
  printf ("FLS_ISR KEYSTA = %05XH,bit18/17=1&bit1=1表示编程解锁且写入完成\n", _RDWORD(0x40001020));		
	_WDWORD(0x40001018, 0x00000000);
	_WDWORD(0x40001020, 0x00000002);	

	_WDWORD(0x40001014, 0x00000002);
	_sleep_(10);
		_WDWORD(0x40001018,0xA5A5A5A5);  
	_sleep_(10);
	_WDWORD(0x40001018, 0xF1F1F1F1); 
	_sleep_(10);
	_WDWORD(0x1FFFFC04, 0XFFFFFFFF); 	
		_sleep_(1500);
  printf ("FLS_ISR KEYSTA = %05XH,bit18/17=1&bit1=1表示编程解锁且写入完成\n", _RDWORD(0x40001020));			
	_WDWORD(0x40001018, 0x00000000);
	_WDWORD(0x40001020, 0x00000002);	
	
  _WDWORD(0x40001014, 0x00000002);  
	  _sleep_(10);
	_WDWORD(0x40001018, 0xA5A5A5A5);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(10);																	 																		
	_WDWORD(0x40001018, 0xF1F1F1F1);	//FLS_KEY Flash Key 输入寄存器
	_sleep_(10);																	 
	_WDWORD(0x1FFFFC08, 0xFFFFFFFF);  //LOCK1
	_sleep_(1500);																	 	
	 printf ("FLS_ISR KEYSTA = %05XH,bit18/17=1&bit1=1表示编程解锁且写入完成\n", _RDWORD(0x40001020));	
	_WDWORD(0x40001018, 0x00000000);	//FLS_KEY Flash Key 输入寄存器
	_WDWORD(0x40001020, 0x00000002);																		

	_WDWORD(0x40000204, 0x5C5CAABB);	//RMU_SOFTRST			软件复位寄存器（RCC_SOFTRST）			软 件 写 0x5C5C_AABB 触 发 全 局 复位										
	_sleep_(10);
}

Setup();                                                // Debugger Setup

